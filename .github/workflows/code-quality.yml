name: Code Quality Check

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Create ESLint config if not exists
        run: |
          if [ ! -f eslint.config.js ]; then
            echo "module.exports = { extends: ['eslint:recommended', 'plugin:prettier/recommended'], env: { browser: true, es2022: true }, parserOptions: { sourceType: 'module', ecmaVersion: 2022 }, rules: { 'no-unused-vars': 'warn', 'no-undef': 'error', 'semi': ['error', 'always'], 'indent': ['error', 2] } };" > eslint.config.js
          fi

      - name: Create Stylelint config if not exists
        run: |
          if [ ! -f .stylelintrc.json ]; then
            echo '{ "extends": "stylelint-config-standard", "rules": { "indentation": 2, "color-hex-case": "lower", "color-hex-length": "short" } }' > .stylelintrc.json
          fi

      - name: Create HTML Validate config if not exists
        run: |
          if [ ! -f .htmlvalidate.json ]; then
            echo '{ "extends": ["html-validate:recommended"], "rules": { "element-required-attributes": "error", "void-style": "off", "doctype-style": "uppercase" } }' > .htmlvalidate.json
          fi

      - name: Lint JavaScript
        run: npm run lint:js

      - name: Lint CSS
        run: npm run lint:css

      - name: Validate HTML
        run: npm run lint:html
